Repositório de onde vieram os assets do projeto:
https://github.com/ikyrie/flex-e-grid

Layout no Figma:
https://www.figma.com/file/ibWktwVpnog76rMYOdVhks/Dispondo-elementos-com-flexbox-e-grid?node-id=54%3A2358

reset.css: arquivo usado para limpar a formatação padrão dos navegadores. 

Emmet: recurso do Visual Studio para autocompletar código HTML etc.
Recursos do Visual Studio/Emmet para tags:
    Operador ponto: Insere a tag e inclui a classe nessa tag:
        tag.classe1.classe2 + Tab
        <tag class="classe1 classe2"></tag>

        .classe + Tab
        <div class="classe"></div>
    
    Operador maior: Insere a tag e dentro dela a subtag:
        tag>subtag + Tab
        <tag>
            <subtag></subtag>
        </tag>

    Operador colchetes: Insere a tag e os atributos com os valores:
        tag[atributo1=valor1 atributo2=valor2]  + Tab
        <tag atributo1="valor1" atributo2="valor2"></tag>

    Operador chaves: Insere a tag e o conteúdo dela.
        tag{Conteúdo} + Tab
        <tag>Conteúdo</tag>

    Operador mais: Insere mais de uma tag na mesma declaração:
        tag1+tag2 + Tab
        <tag1></tag1>
        <tag2></tag2>

    Operador parênteses: Agrupa tags para ordenar a hierarquia de geração do HTML:
        (.classe)+tag2 + Tab
        <div class="classe"></div>
        <tag2></tag2>

    Operador asterisco: Repete a tag n vezes:
        tag*3
        <tag></tag>
        <tag></tag>
        <tag></tag>

    Operador cifrão: Serve como variável contadora usada na impressão do HTML.
        tag{Conteúdo $}*3
        <tag>Conteúdo 1</tag>
        <tag>Conteúdo 2</tag>
        <tag>Conteúdo 3</tag>

        tag[propriedade="item-$"]*3
        <tag propriedade="item-1"></tag>
        <tag propriedade="item-2"></tag>
        <tag propriedade="item-3"></tag>

    Operador cerquilha: Inclui a propriedade ID na tag.

Cheat Sheet do Emmet: https://docs.emmet.io/cheat-sheet/
Resumo do Emmet:
    () = agrupa tags
    [] = insere propriedades
    {} = insere conteúdo na tag
    .  = insere classe
    >  = insere tag aninhada
    +  = insere tag no mesmo nível hierárquico
    *  = repete a tag N vezes.
    $  = variável contadora
    #  = fornece atributo id para a tag.

Para distribuir conteúdo, precisamos saber o que será distribuído e onde.
No exemplo, temos 3 elementos que serão distribuídos no header.

O "onde" é que vai receber a propriedade CSS display: flex. 

Definida essa propriedade, os 3 elementos-filho podem ser alinhados remanejados
com as propriedades justify-content e align-items.

Padrão BEM (Bloco, Elemento e Modificador). 
Blocos tem independência no seu nome e são pais de Elementos.
Elementos são sempre precedidos de double-underscores (__).
Modificadores são sempre precedidos de double-dashes (--) e definem o estado 
de blocos ou elementos.

Padrão de nomenclatura: bloco__elemento--modificador


Conteúdo sobre flexbox no CSS: 
https://css-tricks.com/snippets/css/a-guide-to-flexbox/


Alinhamentos horizontais dos elementos no bloco flexbox (justify-content):
    flex-start:     os elementos se alinham a partir do início do bloco.
    flex-end:       os elementos se alinham a partir do fim do bloco.
    center:         os elementos se alinham a partir do centro do bloco.
    space-around:   acrescentam-se espaços fixos nos dois lados dos elementos.
                    Elementos centrais recebem o dobro de espaçamento.
    space-evenly:   acrescentam-se espaços iguais entre os elementos e o canto.
                    Elementos centrais recebem o mesmo espaço que os laterais.
    space-between:  os elementos dos cantos ficam nos cantos, e o espaço entre
                    eles é igualado (evenly).


    Lembre-se que a propriedade justify-content só utiliza o espaço dentro do
    flexbox. Se não houver espaço no flexbox, esta propriedade não funcionará.

Alinhamentos verticais dos elementos do flexbox (align-items):
    flex-start:     os elementos se alinham a partir do topo do bloco.
    flex-end:       os elementos se alinham a partir da base do bloco.
    center:         os elementos se alinham a partir do centro do bloco.
    stretch:        os elementos se esticam em todo o flexbox. É o padrão.

Padding com dois parâmetros: 
    padding: (valores horizontais) (valores verticais);

Box-shadow com quataro parâmetros:
    box-shadow: (offset horizontal) (offset vertical) (blur) (cor)